/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import classes.*;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;

/**
 *
 * @author manyd
 */
public class App extends javax.swing.JFrame {

    ArrayList<String> hidratos = new ArrayList<>();
    ArrayList<String> grasas = new ArrayList<>();
    ArrayList<String> frutas = new ArrayList<>();
    ArrayList<Alimento> alimentos = new ArrayList<>();

    public App() {
        addFruitsToArrayLists();
        initComponents();
    }

    private void addFruitsToArrayLists() {
        hidratos.add("Papa");
        hidratos.add("Pasta");
        hidratos.add("Pan");
        grasas.add("Aceite");
        grasas.add("Queso");
        grasas.add("Chocolate");
        grasas.add("Pescado");
        frutas.add("Manzana");
        frutas.add("Aguacate");
        frutas.add("Uva");
        frutas.add("Tomate");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        caloriesInput = new javax.swing.JSpinner();
        weightInput = new javax.swing.JTextField();
        unitInput = new javax.swing.JTextField();
        groupInput = new javax.swing.JComboBox<>();
        foodInput = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        foodTable = new javax.swing.JTable();
        addProductBtn = new javax.swing.JButton();
        saveEditionBtn = new javax.swing.JButton();
        editProductBtn = new javax.swing.JButton();
        deleteProductBtn = new javax.swing.JButton();
        showEverythingBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Calorías");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Peso Porción");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Unidad Medida");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Grupo");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Alimento");

        groupInput.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Frutas y Verduras", "Hidratos de Carbono", "Grasas" }));
        groupInput.setToolTipText("");

        foodInput.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Aceite", "Aguacate", "Chocolate", "Manzana", "Pan", "Papa", "Pasta", "Pescado", "Queso", "Tomate", "Uva" }));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("REGISTRO ALIMENTO");

        foodTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Alimento", "Grupo", "Peso Porción", "Unidad Medida", "Calorías"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(foodTable);

        addProductBtn.setText("Agregar Producto");
        addProductBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProductBtnActionPerformed(evt);
            }
        });

        saveEditionBtn.setText("Guardar Edición");
        saveEditionBtn.setEnabled(false);
        saveEditionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveEditionBtnActionPerformed(evt);
            }
        });

        editProductBtn.setText("Editar Producto");
        editProductBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editProductBtnActionPerformed(evt);
            }
        });

        deleteProductBtn.setText("Borrar Producto");
        deleteProductBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteProductBtnActionPerformed(evt);
            }
        });

        showEverythingBtn.setText("Ver Información Nutricional");
        showEverythingBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showEverythingBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 886, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(editProductBtn)
                        .addGap(18, 18, 18)
                        .addComponent(deleteProductBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(showEverythingBtn)
                        .addGap(57, 57, 57))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addProductBtn)
                        .addGap(35, 35, 35)
                        .addComponent(saveEditionBtn))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(369, 369, 369)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(81, 81, 81)
                                .addComponent(caloriesInput))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(31, 31, 31)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(unitInput)
                                    .addComponent(groupInput, 0, 1, Short.MAX_VALUE)
                                    .addComponent(foodInput, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(47, 47, 47)
                                        .addComponent(weightInput, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(355, 355, 355))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(394, 394, 394))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabel7)
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(groupInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(foodInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(weightInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(unitInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(caloriesInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveEditionBtn)
                    .addComponent(addProductBtn))
                .addGap(51, 51, 51)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editProductBtn)
                    .addComponent(deleteProductBtn)
                    .addComponent(showEverythingBtn))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addProductBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProductBtnActionPerformed
        addFood();
        clearFields();
    }//GEN-LAST:event_addProductBtnActionPerformed

    private void saveEditionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveEditionBtnActionPerformed
        saveEdition();
    }//GEN-LAST:event_saveEditionBtnActionPerformed

    private int selectedModificationRow = 0;

    private void editProductBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editProductBtnActionPerformed
        selectedModificationRow = updateProduct();
    }//GEN-LAST:event_editProductBtnActionPerformed

    private void deleteProductBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteProductBtnActionPerformed
        deleteProduct();
    }//GEN-LAST:event_deleteProductBtnActionPerformed

    private void showEverythingBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showEverythingBtnActionPerformed
        showAllInfo();
    }//GEN-LAST:event_showEverythingBtnActionPerformed

    private void addFood() {
        try {
            String group = groupInput.getSelectedItem().toString();
            String food = foodInput.getSelectedItem().toString();

            if (!foodBelongs(group, food)) {
                JOptionPane.showMessageDialog(this, "Categoría Incorrecta!");
                clearFields();
            } else {
                double weight = Double.parseDouble(weightInput.getText());
                String unit = unitInput.getText();
                int calories = Integer.parseInt(caloriesInput.getValue().toString());

                Alimento alimento = createFood(food, weight, unit, calories);
                alimentos.add(alimento);
                addToTable(alimento);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Dato inválido: " + e.getMessage());
        }
    }

    private void addToTable(Alimento alimento) {
        DefaultTableModel foodModelTable = (DefaultTableModel) foodTable.getModel();

        Object[] rowData = {
                alimento.getNombre(),
                alimento.getGrupo(),
                alimento.getPesoPorPorcion(),
                alimento.getUnidadMedida(),
                alimento.getCalorias(),
        };

        foodModelTable.addRow(rowData);
    }

    private Alimento createFood(String food, double weight, String unit, int calories) {
        switch (food) {
            case "Aceite":
                String oilType = JOptionPane.showInputDialog(this, "Tipo de Aceite: ");
                return new Aceite(calories, weight, unit, oilType);
            case "Queso":
                String cheeseType = JOptionPane.showInputDialog(this, "Tipo de Queso: ");
                boolean isRipe = JOptionPane.showConfirmDialog(this, "Está maduro: ") == 1;
                return new Queso( calories, weight, unit, cheeseType, isRipe);
            case "Chocolate":
                double cocoaPercentage = Double.parseDouble(JOptionPane.showInputDialog(this, "Porcentaje Cocoa: "));
                return new Chocolate( calories, weight, unit, cocoaPercentage);
            case "Manzana":
                String appleType = JOptionPane.showInputDialog(this, "Variedad: ");
                return new Manzana( calories, weight, unit, appleType);
            case "Aguacate":
                String avocadoType = JOptionPane.showInputDialog(this, "Tipo de Aguacate: ");
                return new Aguacate(calories, weight, unit, avocadoType);
            case "Uva":
                String grapeType = JOptionPane.showInputDialog(this, "Tipo de Uva: ");
                boolean hasSeeds = JOptionPane.showConfirmDialog(this, "Tiene Semillas: ") == 1;
                return new Uva(calories, weight, unit, grapeType, hasSeeds);
            case "Tomate":
                String tomateType = JOptionPane.showInputDialog(this, "Tipo de Tomate: ");
                return new Tomate(calories, weight, unit, tomateType);
            case "Papa":
                String potatoType = JOptionPane.showInputDialog(this, "Tipo de Papa: ");
                return new Papa(calories, weight, unit, potatoType);
            case "Pasta":
                String shape = JOptionPane.showInputDialog(this, "Forma de pasta: ");
                return new Pasta(calories, weight, unit, shape);
            case "Pan":
                String floorType = JOptionPane.showInputDialog(this, "Tipo de Arina: ");
                boolean isIntegral = JOptionPane.showConfirmDialog(this, "Es Integral: ") == 1;
                return new Pan(calories, weight, unit, floorType, isIntegral);
            case "Pescado": 
                String species = JOptionPane.showInputDialog(this, "Especie: ");
                return new Pescado(calories, weight, unit, species);
            default:
                return null;
        }
    }

    private boolean foodBelongs(String group, String food) {
        return switch (group) {
            case "Grasa" -> grasas.contains(food);
            case "Hidratos de Carbono" -> hidratos.contains(food);
            case "Frutas y Verduras" -> frutas.contains(food);
            default -> false;
        };
    }

    private int updateProduct() {
        int selectedRow = foodTable.getSelectedRow();

        if (selectedRow == -1) return -1;

        try {
            Alimento tempAlimento = alimentos.get(selectedRow);

            groupInput.setSelectedItem(tempAlimento.getGrupo());
            foodInput.setSelectedItem(tempAlimento.getNombre());
            groupInput.setEnabled(false);
            foodInput.setEnabled(false);
            weightInput.setText(String.valueOf(tempAlimento.getPesoPorPorcion()));
            unitInput.setText(tempAlimento.getUnidadMedida());
            caloriesInput.setValue(tempAlimento.getCalorias());

            saveEditionBtn.setEnabled(true);
            addProductBtn.setEnabled(false);

            return selectedRow;
        } catch (IndexOutOfBoundsException e) {
            return -1;
        }
    }

    private void deleteProduct() {
        int selectedRow = foodTable.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Ninguna fila seleccionada");
            return;
        }

        try {
            alimentos.remove(selectedRow);
            removeFromTable(selectedRow);
        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(this, "Algo salió mal: " + e.getMessage());
        }
    }

    private void removeFromTable(int row) {
        DefaultTableModel foodModelTable = (DefaultTableModel) foodTable.getModel();
        foodModelTable.removeRow(row);
    }

    private void clearFields() {
        weightInput.setText("");
        unitInput.setText("");
        caloriesInput.setValue(0);
    }

    private void saveEdition() {
        try {
            Alimento alimento = alimentos.get(selectedModificationRow);

            alimento.setCalorias(Double.parseDouble(caloriesInput.getValue().toString()));
            alimento.setUnidadMedida(unitInput.getText());
            alimento.setPesoPorPorcion(Double.parseDouble(weightInput.getText()));

            updateTable(selectedModificationRow, alimento);

            saveEditionBtn.setEnabled(false);
            addProductBtn.setEnabled(true);
            groupInput.setEnabled(true);
            foodInput.setEnabled(true);
        } catch (Exception e ) {
            JOptionPane.showMessageDialog(this, "Algo salió mal: " + e.getMessage());
        }
    }

    private void updateTable(int row, Alimento alimento) {
        DefaultTableModel foodModelTable = (DefaultTableModel) foodTable.getModel();
        foodModelTable.setValueAt(alimento.getPesoPorPorcion(), row, 0);
        foodModelTable.setValueAt(alimento.getUnidadMedida(), row, 0);
        foodModelTable.setValueAt(alimento.getCalorias(), row, 0);
    }
    
    private void showAllInfo() {
        int selectedRow = foodTable.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Ninguna fila seleccionada");
            return;
        }

        Alimento alimento = alimentos.get(selectedRow);
        JOptionPane.showMessageDialog(this, alimento.obtenerInformacionNutricional());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new App().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addProductBtn;
    private javax.swing.JSpinner caloriesInput;
    private javax.swing.JButton deleteProductBtn;
    private javax.swing.JButton editProductBtn;
    private javax.swing.JComboBox<String> foodInput;
    private javax.swing.JTable foodTable;
    private javax.swing.JComboBox<String> groupInput;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton saveEditionBtn;
    private javax.swing.JButton showEverythingBtn;
    private javax.swing.JTextField unitInput;
    private javax.swing.JTextField weightInput;
    // End of variables declaration//GEN-END:variables
}
